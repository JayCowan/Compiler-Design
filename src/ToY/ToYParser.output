Grammar

    0 $accept: input $end

    1 input: line
    2      | input line

    3 line: '\n'
    4     | printf '\n'
    5     | exp '\n'
    6     | error '\n'

    7 exp: NUM
    8    | '!'
    9    | '-' error
   10    | '-' exp
   11    | exp '+' exp
   12    | exp '-' exp
   13    | exp '^' exp
   14    | exp '*' exp
   15    | exp '/' exp
   16    | exp '=' exp
   17    | '(' exp ')'
   18    | '(' error ')'

   19 printf: STRING
   20       | "printf" printf ';'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5 6
    '!' (33) 8
    '(' (40) 17 18
    ')' (41) 17 18
    '*' (42) 14
    '+' (43) 11
    '-' (45) 9 10 12
    '/' (47) 15
    ';' (59) 20
    '=' (61) 16
    '^' (94) 13
    error (256) 6 9 18
    NUM <Integer> (258) 7
    STRING <String> (259) 19
    NEG (260)
    "printf" (261) 20


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    input (19)
        on left: 1 2
        on right: 0 2
    line (20)
        on left: 3 4 5 6
        on right: 1 2
    exp <Integer> (21)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 5 10 11 12 13 14 15 16 17
    printf <String> (22)
        on left: 19 20
        on right: 4 20


State 0

    0 $accept: • input $end
    1 input: • line
    2      | • input line
    3 line: • '\n'
    4     | • printf '\n'
    5     | • exp '\n'
    6     | • error '\n'
    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'
   19 printf: • STRING
   20       | • "printf" printf ';'

    error     shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    '-'       shift, and go to state 4
    '\n'      shift, and go to state 5
    '!'       shift, and go to state 6
    '('       shift, and go to state 7
    "printf"  shift, and go to state 8

    input   go to state 9
    line    go to state 10
    exp     go to state 11
    printf  go to state 12


State 1

    6 line: error • '\n'

    '\n'  shift, and go to state 13


State 2

    7 exp: NUM •

    $default  reduce using rule 7 (exp)


State 3

   19 printf: STRING •

    $default  reduce using rule 19 (printf)


State 4

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
    9    | '-' • error
   10    | • '-' exp
   10    | '-' • exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    error  shift, and go to state 14
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4
    '!'    shift, and go to state 6
    '('    shift, and go to state 7

    exp  go to state 15


State 5

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 6

    8 exp: '!' •

    $default  reduce using rule 8 (exp)


State 7

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   17    | '(' • exp ')'
   18    | • '(' error ')'
   18    | '(' • error ')'

    error  shift, and go to state 16
    NUM    shift, and go to state 2
    '-'    shift, and go to state 4
    '!'    shift, and go to state 6
    '('    shift, and go to state 7

    exp  go to state 17


State 8

   19 printf: • STRING
   20       | • "printf" printf ';'
   20       | "printf" • printf ';'

    STRING    shift, and go to state 3
    "printf"  shift, and go to state 8

    printf  go to state 18


State 9

    0 $accept: input • $end
    2 input: input • line
    3 line: • '\n'
    4     | • printf '\n'
    5     | • exp '\n'
    6     | • error '\n'
    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'
   19 printf: • STRING
   20       | • "printf" printf ';'

    $end      shift, and go to state 19
    error     shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    '-'       shift, and go to state 4
    '\n'      shift, and go to state 5
    '!'       shift, and go to state 6
    '('       shift, and go to state 7
    "printf"  shift, and go to state 8

    line    go to state 20
    exp     go to state 11
    printf  go to state 12


State 10

    1 input: line •

    $default  reduce using rule 1 (input)


State 11

    5 line: exp • '\n'
   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp

    '-'   shift, and go to state 21
    '+'   shift, and go to state 22
    '*'   shift, and go to state 23
    '/'   shift, and go to state 24
    '^'   shift, and go to state 25
    '='   shift, and go to state 26
    '\n'  shift, and go to state 27


State 12

    4 line: printf • '\n'

    '\n'  shift, and go to state 28


State 13

    6 line: error '\n' •

    $default  reduce using rule 6 (line)


State 14

    9 exp: '-' error •

    $default  reduce using rule 9 (exp)


State 15

   10 exp: '-' exp •  ['\n', ')']
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 10 (exp)

    Conflict between rule 10 and token '-' resolved as shift (NEG < '-').
    Conflict between rule 10 and token '+' resolved as shift (NEG < '+').
    Conflict between rule 10 and token '*' resolved as shift (NEG < '*').
    Conflict between rule 10 and token '/' resolved as shift (NEG < '/').
    Conflict between rule 10 and token '^' resolved as shift (NEG < '^').
    Conflict between rule 10 and token '=' resolved as shift (NEG < '=').


State 16

   18 exp: '(' error • ')'

    ')'  shift, and go to state 29


State 17

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp
   17    | '(' exp • ')'

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    '='  shift, and go to state 26
    ')'  shift, and go to state 30


State 18

   20 printf: "printf" printf • ';'

    ';'  shift, and go to state 31


State 19

    0 $accept: input $end •

    $default  accept


State 20

    2 input: input line •

    $default  reduce using rule 2 (input)


State 21

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   12    | exp '-' • exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 32


State 22

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   11    | exp '+' • exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 33


State 23

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   14    | exp '*' • exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 34


State 24

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   15    | exp '/' • exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 35


State 25

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   13    | exp '^' • exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 36


State 26

    7 exp: • NUM
    8    | • '!'
    9    | • '-' error
   10    | • '-' exp
   11    | • exp '+' exp
   12    | • exp '-' exp
   13    | • exp '^' exp
   14    | • exp '*' exp
   15    | • exp '/' exp
   16    | • exp '=' exp
   16    | exp '=' • exp
   17    | • '(' exp ')'
   18    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 4
    '!'  shift, and go to state 6
    '('  shift, and go to state 7

    exp  go to state 37


State 27

    5 line: exp '\n' •

    $default  reduce using rule 5 (line)


State 28

    4 line: printf '\n' •

    $default  reduce using rule 4 (line)


State 29

   18 exp: '(' error ')' •

    $default  reduce using rule 18 (exp)


State 30

   17 exp: '(' exp ')' •

    $default  reduce using rule 17 (exp)


State 31

   20 printf: "printf" printf ';' •

    $default  reduce using rule 20 (printf)


State 32

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   12    | exp '-' exp •  ['-', '+', '\n', ')']
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 12 (exp)

    Conflict between rule 12 and token '-' resolved as reduce (%left '-').
    Conflict between rule 12 and token '+' resolved as reduce (%left '+').
    Conflict between rule 12 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 12 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 12 and token '^' resolved as shift ('-' < '^').
    Conflict between rule 12 and token '=' resolved as shift ('-' < '=').


State 33

   11 exp: exp • '+' exp
   11    | exp '+' exp •  ['-', '+', '\n', ')']
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 11 (exp)

    Conflict between rule 11 and token '-' resolved as reduce (%left '-').
    Conflict between rule 11 and token '+' resolved as reduce (%left '+').
    Conflict between rule 11 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 11 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 11 and token '^' resolved as shift ('+' < '^').
    Conflict between rule 11 and token '=' resolved as shift ('+' < '=').


State 34

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   14    | exp '*' exp •  ['-', '+', '*', '/', '\n', ')']
   15    | exp • '/' exp
   16    | exp • '=' exp

    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 14 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 14 and token '*' resolved as reduce (%left '*').
    Conflict between rule 14 and token '/' resolved as reduce (%left '/').
    Conflict between rule 14 and token '^' resolved as shift ('*' < '^').
    Conflict between rule 14 and token '=' resolved as shift ('*' < '=').


State 35

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   15    | exp '/' exp •  ['-', '+', '*', '/', '\n', ')']
   16    | exp • '=' exp

    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 15 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 15 and token '*' resolved as reduce (%left '*').
    Conflict between rule 15 and token '/' resolved as reduce (%left '/').
    Conflict between rule 15 and token '^' resolved as shift ('/' < '^').
    Conflict between rule 15 and token '=' resolved as shift ('/' < '=').


State 36

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   13    | exp '^' exp •  ['-', '+', '*', '/', '\n', ')']
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp

    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 13 (exp)

    Conflict between rule 13 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 13 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 13 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 13 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 13 and token '^' resolved as shift (%right '^').
    Conflict between rule 13 and token '=' resolved as shift ('^' < '=').


State 37

   11 exp: exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '^' exp
   14    | exp • '*' exp
   15    | exp • '/' exp
   16    | exp • '=' exp
   16    | exp '=' exp •  ['\n', ')']

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    '='  shift, and go to state 26

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token '-' resolved as shift (NEG < '-').
    Conflict between rule 16 and token '+' resolved as shift (NEG < '+').
    Conflict between rule 16 and token '*' resolved as shift (NEG < '*').
    Conflict between rule 16 and token '/' resolved as shift (NEG < '/').
    Conflict between rule 16 and token '^' resolved as shift (NEG < '^').
    Conflict between rule 16 and token '=' resolved as shift (NEG < '=').
