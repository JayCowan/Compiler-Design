Grammar

    0 $accept: input $end

    1 input: line
    2      | input line

    3 line: '\n'
    4     | exp '\n'
    5     | error '\n'

    6 exp: NUM
    7    | '!'
    8    | '-' error
    9    | '-' exp
   10    | exp '+' exp
   11    | exp '-' exp
   12    | exp '^' exp
   13    | exp '*' exp
   14    | exp '/' exp
   15    | exp '=' exp
   16    | '(' exp ')'
   17    | '(' error ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5
    '!' (33) 7
    '(' (40) 16 17
    ')' (41) 16 17
    '*' (42) 13
    '+' (43) 10
    '-' (45) 8 9 11
    '/' (47) 14
    '=' (61) 15
    '^' (94) 12
    error (256) 5 8 17
    NUM <Integer> (258) 6
    NEG (259)


Nonterminals, with rules where they appear

    $accept (15)
        on left: 0
    input (16)
        on left: 1 2
        on right: 0 2
    line (17)
        on left: 3 4 5
        on right: 1 2
    exp <Integer> (18)
        on left: 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 4 9 10 11 12 13 14 15 16


State 0

    0 $accept: • input $end
    1 input: • line
    2      | • input line
    3 line: • '\n'
    4     | • exp '\n'
    5     | • error '\n'
    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    error  shift, and go to state 1
    NUM    shift, and go to state 2
    '-'    shift, and go to state 3
    '\n'   shift, and go to state 4
    '!'    shift, and go to state 5
    '('    shift, and go to state 6

    input  go to state 7
    line   go to state 8
    exp    go to state 9


State 1

    5 line: error • '\n'

    '\n'  shift, and go to state 10


State 2

    6 exp: NUM •

    $default  reduce using rule 6 (exp)


State 3

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    8    | '-' • error
    9    | • '-' exp
    9    | '-' • exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    error  shift, and go to state 11
    NUM    shift, and go to state 2
    '-'    shift, and go to state 3
    '!'    shift, and go to state 5
    '('    shift, and go to state 6

    exp  go to state 12


State 4

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 5

    7 exp: '!' •

    $default  reduce using rule 7 (exp)


State 6

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   16    | '(' • exp ')'
   17    | • '(' error ')'
   17    | '(' • error ')'

    error  shift, and go to state 13
    NUM    shift, and go to state 2
    '-'    shift, and go to state 3
    '!'    shift, and go to state 5
    '('    shift, and go to state 6

    exp  go to state 14


State 7

    0 $accept: input • $end
    2 input: input • line
    3 line: • '\n'
    4     | • exp '\n'
    5     | • error '\n'
    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    $end   shift, and go to state 15
    error  shift, and go to state 1
    NUM    shift, and go to state 2
    '-'    shift, and go to state 3
    '\n'   shift, and go to state 4
    '!'    shift, and go to state 5
    '('    shift, and go to state 6

    line  go to state 16
    exp   go to state 9


State 8

    1 input: line •

    $default  reduce using rule 1 (input)


State 9

    4 line: exp • '\n'
   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp

    '-'   shift, and go to state 17
    '+'   shift, and go to state 18
    '*'   shift, and go to state 19
    '/'   shift, and go to state 20
    '^'   shift, and go to state 21
    '='   shift, and go to state 22
    '\n'  shift, and go to state 23


State 10

    5 line: error '\n' •

    $default  reduce using rule 5 (line)


State 11

    8 exp: '-' error •

    $default  reduce using rule 8 (exp)


State 12

    9 exp: '-' exp •  ['\n', ')']
   10    | exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 9 (exp)

    Conflict between rule 9 and token '-' resolved as shift (NEG < '-').
    Conflict between rule 9 and token '+' resolved as shift (NEG < '+').
    Conflict between rule 9 and token '*' resolved as shift (NEG < '*').
    Conflict between rule 9 and token '/' resolved as shift (NEG < '/').
    Conflict between rule 9 and token '^' resolved as shift (NEG < '^').
    Conflict between rule 9 and token '=' resolved as shift (NEG < '=').


State 13

   17 exp: '(' error • ')'

    ')'  shift, and go to state 24


State 14

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp
   16    | '(' exp • ')'

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '^'  shift, and go to state 21
    '='  shift, and go to state 22
    ')'  shift, and go to state 25


State 15

    0 $accept: input $end •

    $default  accept


State 16

    2 input: input line •

    $default  reduce using rule 2 (input)


State 17

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   11    | exp '-' • exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 26


State 18

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   10    | exp '+' • exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 27


State 19

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   13    | exp '*' • exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 28


State 20

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   14    | exp '/' • exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 29


State 21

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   12    | exp '^' • exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 30


State 22

    6 exp: • NUM
    7    | • '!'
    8    | • '-' error
    9    | • '-' exp
   10    | • exp '+' exp
   11    | • exp '-' exp
   12    | • exp '^' exp
   13    | • exp '*' exp
   14    | • exp '/' exp
   15    | • exp '=' exp
   15    | exp '=' • exp
   16    | • '(' exp ')'
   17    | • '(' error ')'

    NUM  shift, and go to state 2
    '-'  shift, and go to state 3
    '!'  shift, and go to state 5
    '('  shift, and go to state 6

    exp  go to state 31


State 23

    4 line: exp '\n' •

    $default  reduce using rule 4 (line)


State 24

   17 exp: '(' error ')' •

    $default  reduce using rule 17 (exp)


State 25

   16 exp: '(' exp ')' •

    $default  reduce using rule 16 (exp)


State 26

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   11    | exp '-' exp •  ['-', '+', '\n', ')']
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp

    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 11 (exp)

    Conflict between rule 11 and token '-' resolved as reduce (%left '-').
    Conflict between rule 11 and token '+' resolved as reduce (%left '+').
    Conflict between rule 11 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 11 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 11 and token '^' resolved as shift ('-' < '^').
    Conflict between rule 11 and token '=' resolved as shift ('-' < '=').


State 27

   10 exp: exp • '+' exp
   10    | exp '+' exp •  ['-', '+', '\n', ')']
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp

    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 10 (exp)

    Conflict between rule 10 and token '-' resolved as reduce (%left '-').
    Conflict between rule 10 and token '+' resolved as reduce (%left '+').
    Conflict between rule 10 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 10 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 10 and token '^' resolved as shift ('+' < '^').
    Conflict between rule 10 and token '=' resolved as shift ('+' < '=').


State 28

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   13    | exp '*' exp •  ['-', '+', '*', '/', '\n', ')']
   14    | exp • '/' exp
   15    | exp • '=' exp

    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 13 (exp)

    Conflict between rule 13 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 13 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 13 and token '*' resolved as reduce (%left '*').
    Conflict between rule 13 and token '/' resolved as reduce (%left '/').
    Conflict between rule 13 and token '^' resolved as shift ('*' < '^').
    Conflict between rule 13 and token '=' resolved as shift ('*' < '=').


State 29

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   14    | exp '/' exp •  ['-', '+', '*', '/', '\n', ')']
   15    | exp • '=' exp

    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 14 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 14 and token '*' resolved as reduce (%left '*').
    Conflict between rule 14 and token '/' resolved as reduce (%left '/').
    Conflict between rule 14 and token '^' resolved as shift ('/' < '^').
    Conflict between rule 14 and token '=' resolved as shift ('/' < '=').


State 30

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   12    | exp '^' exp •  ['-', '+', '*', '/', '\n', ')']
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp

    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 12 (exp)

    Conflict between rule 12 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 12 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 12 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 12 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 12 and token '^' resolved as shift (%right '^').
    Conflict between rule 12 and token '=' resolved as shift ('^' < '=').


State 31

   10 exp: exp • '+' exp
   11    | exp • '-' exp
   12    | exp • '^' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | exp • '=' exp
   15    | exp '=' exp •  ['\n', ')']

    '-'  shift, and go to state 17
    '+'  shift, and go to state 18
    '*'  shift, and go to state 19
    '/'  shift, and go to state 20
    '^'  shift, and go to state 21
    '='  shift, and go to state 22

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token '-' resolved as shift (NEG < '-').
    Conflict between rule 15 and token '+' resolved as shift (NEG < '+').
    Conflict between rule 15 and token '*' resolved as shift (NEG < '*').
    Conflict between rule 15 and token '/' resolved as shift (NEG < '/').
    Conflict between rule 15 and token '^' resolved as shift (NEG < '^').
    Conflict between rule 15 and token '=' resolved as shift (NEG < '=').
